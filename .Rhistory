)
body <- content(response)
View(body)
token <- "BQAbmVMr7mZLtJnwKSMWpPRCe2A0GubRn3fR1AUSNnh5x7yYBBlr-DPBESOwLPdQF9TacBcimPiyPhbppUx5elPF5G1u7nYRB9N7uIm1a2_lFA0KtfpxXEPneNHOFLRXxspNfTBav81LfBk4"
response <- GET(
"https://api.spotify.com/v1/users/{koandcoultd}/playlists/{3cEYpjA9oz9GiPac4AsH4n}/tracks",
add_headers("Authorization" = paste("Bearer ", token))
)
body <- content(response)
View(body)
library("httr")
install.packages("RCurl")
# install.packages("RCurl")
library("RCurl") # new package we haven't used before make sure to install
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
library("jsonlite")
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# This file is for authorizing the spotify API making requests to the API and
# making calls to the API
getwd()
setwd("~/Desktop/Info-Final-Project-Spotify")
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
# create token/key for all requests for the API
token <- auth_body$access_token
client_id <- "aa8e63276301419b82aae3b8fe60c5c8"
client_secret <- "3d7b821449614e5cb38e5afdbb0e5af7"
library("shiny")
source("setup.R") # run the setup file
my_server <- function(input, output) {
}
shinyServer(my_server)
library("shiny")
source("setup.R") # run the setup file
my_ui <- fluidPage(
)
shinyUI(my_ui)
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotify/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
View(body)
body
library("shiny")
source("setup.R") # run the setup file
my_server <- function(input, output) {
}
shinyServer(my_server)
library("shiny")
source("setup.R") # run the setup file
my_ui <- fluidPage(
)
shinyUI(my_ui)
library("httr")
# install.packages("RCurl")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
# This file is for authorizing the spotify API making requests to the API and
# making calls to the API
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
# create token/key for all requests for the API
token <- auth_body$access_token
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotify/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
body
client_id <- "aa8e63276301419b82aae3b8fe60c5c8"
client_secret <- "3d7b821449614e5cb38e5afdbb0e5af7"
library("httr")
# install.packages("RCurl")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
# This file is for authorizing the spotify API making requests to the API and
# making calls to the API
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
# create token/key for all requests for the API
token <- auth_body$access_token
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotify/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
body
print(token)
getFeatures<-function(spotify_ID,token){
req <- httr::GET(paste0("https://api.spotify.com/v1/audio-features/",spotify_ID), add_headers(Authorization = HeaderValue))
json1<-httr::content(req)
dados=data.frame(id=json1$id,
danceability=json1$danceability,
energy=json1$energy,
key=json1$key,
loudness=json1$loudness,
mode=json1$mode,
speechiness=json1$speechiness,
acousticness=json1$acousticness,
instrumentalness=json1$instrumentalness,
liveness=json1$liveness,
valence=json1$valence,
tempo=json1$tempo,
duration_ms=json1$duration_ms,
time_signature=json1$time_signature,
uri=json1$uri,
analysis_url=json1$analysis_url,stringsAsFactors = F)
return(dados)
}
KanyeFatherStretch <- getFeatures("4KW1lqgSr8TKrvBII0Brf8")
KanyeFatherStretch <- getFeatures("4KW1lqgSr8TKrvBII0Brf8")
KanyeFatherStretch <- getFeatures("4KW1lqgSr8TKrvBII0Brf8")
DrakeNiceForWhat <- getFeatures("1cTZMwcBJT0Ka3UJPXOeeN")
getFeatures<-function(spotify_ID,token){
req <- httr::GET(paste0("https://api.spotify.com/v1/audio-features/",spotify_ID), add_headers(Authorization = HeaderValue))
json1<-httr::content(req)
dados=data.frame(id=json1$id,
danceability=json1$danceability,
energy=json1$energy,
key=json1$key,
loudness=json1$loudness,
mode=json1$mode,
speechiness=json1$speechiness,
acousticness=json1$acousticness,
instrumentalness=json1$instrumentalness,
liveness=json1$liveness,
valence=json1$valence,
tempo=json1$tempo,
duration_ms=json1$duration_ms,
time_signature=json1$time_signature,
uri=json1$uri,
analysis_url=json1$analysis_url,stringsAsFactors = F)
return(dados)
}
DrakeNiceForWhat <- getFeatures("1cTZMwcBJT0Ka3UJPXOeeN")
getFeatures<-function(spotify_ID,token){
req <- httr::GET(paste0("https://api.spotify.com/v1/audio-features/",spotify_ID), add_headers(Authorization = token))
json1<-httr::content(req)
dados=data.frame(id=json1$id,
danceability=json1$danceability,
energy=json1$energy,
key=json1$key,
loudness=json1$loudness,
mode=json1$mode,
speechiness=json1$speechiness,
acousticness=json1$acousticness,
instrumentalness=json1$instrumentalness,
liveness=json1$liveness,
valence=json1$valence,
tempo=json1$tempo,
duration_ms=json1$duration_ms,
time_signature=json1$time_signature,
uri=json1$uri,
analysis_url=json1$analysis_url,stringsAsFactors = F)
return(dados)
}
DrakeNiceForWhat <- getFeatures("1cTZMwcBJT0Ka3UJPXOeeN")
getFeatures<-function(spotify_ID,token){
req <- httr::GET(paste0("https://api.spotify.com/v1/audio-features/",spotify_ID), add_headers(Authorization = auth_body))
json1<-httr::content(req)
dados=data.frame(id=json1$id,
danceability=json1$danceability,
energy=json1$energy,
key=json1$key,
loudness=json1$loudness,
mode=json1$mode,
speechiness=json1$speechiness,
acousticness=json1$acousticness,
instrumentalness=json1$instrumentalness,
liveness=json1$liveness,
valence=json1$valence,
tempo=json1$tempo,
duration_ms=json1$duration_ms,
time_signature=json1$time_signature,
uri=json1$uri,
analysis_url=json1$analysis_url,stringsAsFactors = F)
return(dados)
}
DrakeNiceForWhat <- getFeatures("1cTZMwcBJT0Ka3UJPXOeeN")
auth_body
library("shiny")
source("setup.R") # run the setup file
my_server <- function(input, output) {
}
shinyServer(my_server)
library("httr")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
auth_body
# create token/key for all requests for the API
token <- auth_body$access_token
print(token)
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotify/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
View(body)
View(body)
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotify/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
playlist_response
client_id <- "aa8e63276301419b82aae3b8fe60c5c8"
client_secret <- "3d7b821449614e5cb38e5afdbb0e5af7"
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotify/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
playlist_response
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotifycharts/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
playlist_response
View(body)
getFeatures<-function(spotify_ID,token){
req <- httr::GET(paste0("https://api.spotify.com/v1/audio-features/",spotify_ID), add_headers(Authorization = ))
json1<-httr::content(req)
dados=data.frame(id=json1$id,
danceability=json1$danceability,
energy=json1$energy,
key=json1$key,
loudness=json1$loudness,
mode=json1$mode,
speechiness=json1$speechiness,
acousticness=json1$acousticness,
instrumentalness=json1$instrumentalness,
liveness=json1$liveness,
valence=json1$valence,
tempo=json1$tempo,
duration_ms=json1$duration_ms,
time_signature=json1$time_signature,
uri=json1$uri,
analysis_url=json1$analysis_url,stringsAsFactors = F)
return(dados)
}
DrakeNiceForWhat <- getFeatures("1cTZMwcBJT0Ka3UJPXOeeN")
library("httr")
# install.packages("RCurl")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
# This file is for authorizing the spotify API making requests to the API and
# making calls to the API
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
auth_body
# create token/key for all requests for the API
token <- auth_body$access_token
print(token)
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotifycharts/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
playlist_response
View(body)
top50 <- fromJSON(body)
View(top50)
top50$items
View(top50$items)
top50$audio_features
song_id <- top50$track.id
View(song_id)
song_id <- top50$track$id
View(song_id)
song_id <- top50$track.id
View(song_id)
song_id <- top50$items$track$id
View(song_id)
playlist_id_response<- GET(
paste0(
"https://api.spotify.com/v1/audio-features/?ids=",
paste0(song_id, collapse = ",")
),
add)headers("Authorization" = paste0("Bearer", token))
playlist_id_response<- GET(
paste0(
"https://api.spotify.com/v1/audio-features/?ids=",
paste0(song_id, collapse = ",")
),
add_headers("Authorization" = paste0("Bearer", token))
)
playlist_id_response
View(playlist_id_response)
library("httr")
# install.packages("RCurl")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
# This file is for authorizing the spotify API making requests to the API and
# making calls to the API
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
auth_body
# create token/key for all requests for the API
token <- auth_body$access_token
print(token)
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotifycharts/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
playlist_response
top50 <- fromJSON(body)
View(top50)
View(top50$items)
song_id <- top50$items$track$id
View(song_id)
playlist_id_response<- GET(
paste0(
"https://api.spotify.com/v1/audio-features/?ids=",
paste0(song_id, collapse = ",")
),
add_headers("Authorization" = paste0("Bearer", token))
)
View(playlist_id_response)
client_id <- "aa8e63276301419b82aae3b8fe60c5c8"
client_secret <- "3d7b821449614e5cb38e5afdbb0e5af7"
playlist_id_response<- GET(
paste0(
"https://api.spotify.com/v1/audio-features/?ids=",
paste0(song_id, collapse = ",")
),
add_headers("Authorization" = paste0("Bearer", token))
)
View(playlist_id_response)
playlist_id_response
song_id
playlist_id_response<- GET(
paste0(
"https://api.spotify.com/v1/audio-features/?ids=",
paste0(song_id, collapse = ",")
),
add_headers("Authorization" = paste0("Bearer", token))
)
playlist_id_response
playlist_id_response
library("httr")
# install.packages("RCurl")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
auth_body
# create token/key for all requests for the API
token <- auth_body$access_token
print(token)
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotifycharts/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
playlist_response
top50 <- fromJSON(body)
View(top50)
library("httr")
# install.packages("RCurl")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
auth_body
# create token/key for all requests for the API
token <- auth_body$access_token
print(token)
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotifycharts/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
playlist_response
top50 <- fromJSON(body)
View(top50)
library("httr")
# install.packages("RCurl")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
# This file is for authorizing the spotify API making requests to the API and
# making calls to the API
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
auth_body
# create token/key for all requests for the API
token <- auth_body$access_token
print(token)
playlist_response <- GET(
"https://api.spotify.com/v1/users/spotifycharts/playlists/37i9dQZEVXbLRQDuF5jeBp/tracks",
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(playlist_response, "text")
playlist_response
top50 <- fromJSON(body)
View(top50)
View(top50$items)
song_id <- top50$items$track$id
View(song_id)
top50_track_response <- GET(
paste0(
"https://api.spotify.com/v1/audio-features/?ids=",
paste0(song_id, collapse = ",")
),
add_headers("Authorization" = paste0("Bearer ", token))
)
top50_track_response
View(top50$items)
View(top50$items)
data.frame(top50$items$track$id, top50$items$track$name, top$items$track$popularity)
data.frame(top50$items$track$id, top50$items$track$name, top50$items$track$popularity)
audio_features_body <- content(top50_track_response)
data.frame(top50$items$track$id, top50$items$track$name, top50$items$track$popularity)
audio_features_body <- content(top50_track_response)
audio_features <- fromjJSON(audio_features_body)
audio_features <- fromJSON(audio_features_body)
audio_features_body <- content(top50_track_response, "text")
audio_features <- fromJSON(audio_features_body)
View(audio_features)
top50_audio_features <- fromJSON(audio_features_body)
View(top50_audio_features)
data.frame(top50$items$track$id, top50$items$track$name, top50$items$track$popularity, $tp50audio_features$danceability)
data.frame(top50$items$track$id, top50$items$track$name, top50$items$track$popularity, $top50audio_features$danceability)
data.frame(top50$items$track$id, top50$items$track$name, top50$items$track$popularity, $top50_audio_features$danceability)
data.frame(top50$items$track$id, top50$items$track$name, top50$items$track$popularity, top50$audio_features$danceability)
top50$audio_features$danceability
data.frame(top50$items$track$id, top50$items$track$name, top50$items$track$popularity, top50_audio_features$audio_features$danceability)
top50$audio_features$danceability
top50_audio_features$audio_features$danceability
top50_df <- data.frame(top50$items$track$id, top50$items$track$name, top50$items$track$popularity, top50_audio_features$audio_features$danceability)
top50_audio_features$audio_features$danceability
View(top50_df)
