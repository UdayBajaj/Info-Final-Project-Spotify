subset_hispanic <- mutate(subset_hispanic, graduation_rate = round((Graduates/(total_students - Transferred.Out)*100), 2))
subset_PaIsl <- mutate(subset_PaIsl, total_students = Began.Grade.9.in.Washington + Transferred.Into.Washington)
subset_PaIsl <- mutate(subset_PaIsl, total_dropouts = Year.1 + Year.2 + Year.3 + Year.4 + Year.5)
subset_PaIsl <- select(subset_PaIsl, School, total_students, total_dropouts, Transferred.Out, Graduates)
subset_PaIsl <- mutate(subset_PaIsl, dropout_rate = round((total_dropouts/(total_students - Transferred.Out)*100), 2))
subset_PaIsl <- mutate(subset_PaIsl, graduation_rate = round((Graduates/(total_students - Transferred.Out)*100), 2))
subset_white <- mutate(subset_white, total_students = Began.Grade.9.in.Washington + Transferred.Into.Washington)
subset_white <- mutate(subset_white, total_dropouts = Year.1 + Year.2 + Year.3 + Year.4 + Year.5)
subset_white <- select(subset_white, School, total_students, total_dropouts, Transferred.Out, Graduates)
subset_white <- mutate(subset_white, dropout_rate = round((total_dropouts/(total_students - Transferred.Out)*100), 2))
subset_white <- mutate(subset_white, graduation_rate = round((Graduates/(total_students - Transferred.Out)*100), 2))
colnames(subset_afAm) = c("School", "afam_students", "afam_dropouts,", "afam_transferred_out", "afam_graduates", "afam_droupout_rate", "afam_graduation_rate")
colnames(subset_amInd) = c("School", "amInd_students", "amInd_dropouts,", "amInd_transferred_out", "amInd_graduates", "amInd_droupout_rate", "amInd_graduation_rate")
colnames(subset_asian) = c("School", "asian_students", "asian_dropouts,", "asian_transferred_out", "asian_graduates", "asian_droupout_rate", "asian_graduation_rate")
colnames(subset_hispanic) = c("School", "hispanic_students", "hispanic_dropouts,", "hispanic_transferred_out", "hispanic_graduates", "hispanic_droupout_rate", "hispanic_graduation_rate")
colnames(subset_PaIsl) = c("School", "PAIsl_students", "PAIsl_dropouts,", "PAIsl_transferred_out", "PAIsl_graduates", "PAIsl_droupout_rate", "PAIsl_graduation_rate")
colnames(subset_white) = c("School", "white_students", "white_dropouts,", "white_transferred_out", "white_graduates", "white_droupout_rate", "white_graduation_rate")
Combined_Data <- right_join(subset_all, subset_afAm, by ="School")
Combined_Data <- right_join(Combined_Data, subset_amInd, by ="School")
Combined_Data <- right_join(Combined_Data, subset_asian, by ="School")
Combined_Data <- right_join(Combined_Data, subset_hispanic, by ="School")
Combined_Data <- right_join(Combined_Data, subset_PaIsl, by ="School")
Combined_Data <- right_join(Combined_Data, subset_white, by ="School")
Combined_Data <- distinct(Combined_Data)
Combined_Data <- filter(Combined_Data, total_students > 0)
needed_rows <- c(348,  269,  447,   41,   33,   65,  456,  638,   78,  104,  419,  469,  467,  244,   30,   73,  306,  537,  523,  183,
758,  214,  392,  563,   20,  591,  171,  739,  643,  213,  224,  670,  566,   49,  172,  579,  283,   10,  640,  133,
704,  585,  570,  489,  734,   91,  692,  726,  546,  742,  320,  150,  385,  414,  494,  501,  622,  478,  725,  553,
715,  567,  225,  353,  394,  323,  310,  205,  514,  125,  669,  635,  268,   79,  600,  329,  157,  359,  680,   59,
54, 422,  293,  402,  207,  434,  513,  265,  698,  596,  506,   27,  142,  260,  178,   39,  330,  542,  416,  109,
177,  347,   56,  258,  618,  355,  328,   74,  676,  634,  497,  192,  292,  319,   97,  100,  230,   43,  369,  476
)
)
subset_all <-all_grad_rates[needed_rows, ]
subset_afAm <- african_american_rates[needed_rows, ]
subset_amInd <-american_indian_rates[needed_rows, ]
subset_asian <-asian_rates[needed_rows, ]
subset_hispanic<-hispanic_rates[needed_rows, ]
subset_PaIsl <-pacific_islander_rates[needed_rows, ]
subset_white <-white_rates[needed_rows, ]
subset_all <- mutate(subset_all, total_students = Began.Grade.9.in.Washington + Transferred.Into.Washington)
subset_all <- mutate(subset_all, total_dropouts = Year.1 + Year.2 + Year.3 + Year.4 + Year.5)
subset_all <- select(subset_all, School, total_students, total_dropouts, Transferred.Out, Graduates)
subset_all <- mutate(subset_all, dropout_rate = round((total_dropouts/(total_students - Transferred.Out)*100), 2))
subset_all <- mutate(subset_all, graduation_rate = round((Graduates/(total_students - Transferred.Out)*100), 2))
subset_afAm <- mutate(subset_afAm, total_students = Began.Grade.9.in.Washington + Transferred.Into.Washington)
subset_afAm <- mutate(subset_afAm, total_dropouts = Year.1 + Year.2 + Year.3 + Year.4 + Year.5)
subset_afAm <- select(subset_afAm, School, total_students, total_dropouts, Transferred.Out, Graduates)
subset_afAm <- mutate(subset_afAm, dropout_rate = round((total_dropouts/(total_students - Transferred.Out)*100), 2))
subset_afAm <- mutate(subset_afAm, graduation_rate = round((Graduates/(total_students - Transferred.Out)*100), 2))
subset_amInd <- mutate(subset_amInd, total_students = Began.Grade.9.in.Washington + Transferred.Into.Washington)
subset_amInd <- mutate(subset_amInd, total_dropouts = Year.1 + Year.2 + Year.3 + Year.4 + Year.5)
subset_amInd <- select(subset_amInd, School, total_students, total_dropouts, Transferred.Out, Graduates)
subset_amInd <- mutate(subset_amInd, dropout_rate = round((total_dropouts/(total_students - Transferred.Out)*100), 2))
subset_amInd <- mutate(subset_amInd, graduation_rate = round((Graduates/(total_students - Transferred.Out)*100), 2))
subset_asian <- mutate(subset_asian, total_students = Began.Grade.9.in.Washington + Transferred.Into.Washington)
subset_asian <- mutate(subset_asian, total_dropouts = Year.1 + Year.2 + Year.3 + Year.4 + Year.5)
subset_asian <- select(subset_asian, School, total_students, total_dropouts, Transferred.Out, Graduates)
subset_asian <- mutate(subset_asian, dropout_rate = round((total_dropouts/(total_students - Transferred.Out)*100), 2))
subset_asian <- mutate(subset_asian, graduation_rate = round((Graduates/(total_students - Transferred.Out)*100), 2))
subset_hispanic <- mutate(subset_hispanic, total_students = Began.Grade.9.in.Washington + Transferred.Into.Washington)
subset_hispanic <- mutate(subset_hispanic, total_dropouts = Year.1 + Year.2 + Year.3 + Year.4 + Year.5)
subset_hispanic <- select(subset_hispanic, School, total_students, total_dropouts, Transferred.Out, Graduates)
subset_hispanic <- mutate(subset_hispanic, dropout_rate = round((total_dropouts/(total_students - Transferred.Out)*100), 2))
subset_hispanic <- mutate(subset_hispanic, graduation_rate = round((Graduates/(total_students - Transferred.Out)*100), 2))
subset_PaIsl <- mutate(subset_PaIsl, total_students = Began.Grade.9.in.Washington + Transferred.Into.Washington)
subset_PaIsl <- mutate(subset_PaIsl, total_dropouts = Year.1 + Year.2 + Year.3 + Year.4 + Year.5)
subset_PaIsl <- select(subset_PaIsl, School, total_students, total_dropouts, Transferred.Out, Graduates)
subset_PaIsl <- mutate(subset_PaIsl, dropout_rate = round((total_dropouts/(total_students - Transferred.Out)*100), 2))
subset_PaIsl <- mutate(subset_PaIsl, graduation_rate = round((Graduates/(total_students - Transferred.Out)*100), 2))
subset_white <- mutate(subset_white, total_students = Began.Grade.9.in.Washington + Transferred.Into.Washington)
subset_white <- mutate(subset_white, total_dropouts = Year.1 + Year.2 + Year.3 + Year.4 + Year.5)
subset_white <- select(subset_white, School, total_students, total_dropouts, Transferred.Out, Graduates)
subset_white <- mutate(subset_white, dropout_rate = round((total_dropouts/(total_students - Transferred.Out)*100), 2))
subset_white <- mutate(subset_white, graduation_rate = round((Graduates/(total_students - Transferred.Out)*100), 2))
colnames(subset_afAm) = c("School", "afam_students", "afam_dropouts,", "afam_transferred_out", "afam_graduates", "afam_droupout_rate", "afam_graduation_rate")
colnames(subset_amInd) = c("School", "amInd_students", "amInd_dropouts,", "amInd_transferred_out", "amInd_graduates", "amInd_droupout_rate", "amInd_graduation_rate")
colnames(subset_asian) = c("School", "asian_students", "asian_dropouts,", "asian_transferred_out", "asian_graduates", "asian_droupout_rate", "asian_graduation_rate")
colnames(subset_hispanic) = c("School", "hispanic_students", "hispanic_dropouts,", "hispanic_transferred_out", "hispanic_graduates", "hispanic_droupout_rate", "hispanic_graduation_rate")
colnames(subset_PaIsl) = c("School", "PAIsl_students", "PAIsl_dropouts,", "PAIsl_transferred_out", "PAIsl_graduates", "PAIsl_droupout_rate", "PAIsl_graduation_rate")
colnames(subset_white) = c("School", "white_students", "white_dropouts,", "white_transferred_out", "white_graduates", "white_droupout_rate", "white_graduation_rate")
Combined_Data <- right_join(subset_all, subset_afAm, by ="School")
Combined_Data <- right_join(Combined_Data, subset_amInd, by ="School")
Combined_Data <- right_join(Combined_Data, subset_asian, by ="School")
Combined_Data <- right_join(Combined_Data, subset_hispanic, by ="School")
Combined_Data <- right_join(Combined_Data, subset_PaIsl, by ="School")
Combined_Data <- right_join(Combined_Data, subset_white, by ="School")
Combined_Data <- distinct(Combined_Data)
Combined_Data <- filter(Combined_Data, total_students > 0)
install.packages("reshape2")
library("reshape2")
d <- read.delim(textConnection(Combined_Data), sep="")
melt
?melt
d <- melt(Combined_Data)
View(d)
ggplot(d, aes(School, value, col =variable)) +
geom_point()
ggplot(d, aes(variable, value) +
geom_point()
ggplot(d, aes(variable, value)) +
geom_point()
write.csv(Combined_Data, "Combined.Data.csv")
View(Combined_Data)
colnames(subset_afAm) = c("School", "afam_students", "afam_dropouts", "afam_transferred_out", "afam_graduates", "afam_droupout_rate", "afam_graduation_rate")
colnames(subset_amInd) = c("School", "amInd_students", "amInd_dropouts", "amInd_transferred_out", "amInd_graduates", "amInd_droupout_rate", "amInd_graduation_rate")
colnames(subset_asian) = c("School", "asian_students", "asian_dropouts", "asian_transferred_out", "asian_graduates", "asian_droupout_rate", "asian_graduation_rate")
colnames(subset_hispanic) = c("School", "hispanic_students", "hispanic_dropouts", "hispanic_transferred_out", "hispanic_graduates", "hispanic_droupout_rate", "hispanic_graduation_rate")
colnames(subset_PaIsl) = c("School", "PAIsl_students", "PAIsl_dropouts", "PAIsl_transferred_out", "PAIsl_graduates", "PAIsl_droupout_rate", "PAIsl_graduation_rate")
colnames(subset_white) = c("School", "white_students", "white_dropouts", "white_transferred_out", "white_graduates", "white_droupout_rate", "white_graduation_rate")
Combined_Data <- right_join(subset_all, subset_afAm, by ="School")
Combined_Data <- right_join(Combined_Data, subset_amInd, by ="School")
Combined_Data <- right_join(Combined_Data, subset_asian, by ="School")
Combined_Data <- right_join(Combined_Data, subset_hispanic, by ="School")
Combined_Data <- right_join(Combined_Data, subset_PaIsl, by ="School")
Combined_Data <- right_join(Combined_Data, subset_white, by ="School")
Combined_Data <- distinct(Combined_Data)
Combined_Data <- filter(Combined_Data, total_students > 0)
Student_totals <- select(Combined_Data, total_students, total_dropouts,
afam_students, afam_dropouts,
amInd_students, amInd_dropouts,
asian_students, asian_dropouts,
hispanic_students, hispanic_dropouts,
PAIsl_students, PAIsl_dropouts,
white_students, white_dropouts
)
View(Student_totals)
write.csv(Student_totals, "StudentTotals.CSV")
Combined_Data <- right_join(subset_all, subset_afAm, by ="School")
Combined_Data <- right_join(Combined_Data, subset_amInd, by ="School")
Combined_Data <- right_join(Combined_Data, subset_asian, by ="School")
Combined_Data <- right_join(Combined_Data, subset_hispanic, by ="School")
Combined_Data <- right_join(Combined_Data, subset_PaIsl, by ="School")
Combined_Data <- right_join(Combined_Data, subset_white, by ="School")
Combined_Data <- distinct(Combined_Data)
View(Combined_Data)
Student_graduates<- select(Combined_Data,
afam_graduates,
amInd_graduates,
asian_graduates,
hispanic_graduates,
PAIsl_graduates,
white_graduates
)
View(Student_graduates)
write.csv(Student_graduates, "StudentGraduates.CSV")
Combined_Data <- filter(Combined_Data, total_students > 0)
Student_graduates<- select(Combined_Data,
afam_graduates,
amInd_graduates,
asian_graduates,
hispanic_graduates,
PAIsl_graduates,
white_graduates
)
write.csv(Student_graduates, "StudentGraduates.CSV")
Demographics <- select(Combined_Data,
afam_students,
amInd_students,
asian_students,
hispanic_students,
PAIsl_students,
white_students
)
write.csv(Student_demographics, "Studentdemographics.CSV")
write.csv(Demographics, "Studentdemographics.CSV")
write.csv(Demographics, "Studentdemographics.CSV")
View(Combined_Data)
install.packages("RCurl")
library("httr")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
library("httr")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
source("keys.R")
setwd("~/GitHub/Info-Final-Project-Spotify")
source("keys.R")
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
library("httr")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
source("keys.R")
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
# create token/key for all requests for the API
token <- auth_body$access_token
response <- GET(
"https://api.spotify.com/v1/albums/3DGQ1iZ9XKUQxAUWjfC34w",
add_headers("Authorization" = paste0("Bearer ", token))
)
View(response)
GET(
"https://api.spotify.com/v1/albums/3DGQ1iZ9XKUQxAUWjfC34w",
add_headers("Authorization" = paste0("Bearer ", token))
)
base_uri <- "https://api.spotify.com/v1/users/"
user_id <- "wavypaper"
playlist_id <- "37i9dQZEVXbLRQDuF5jeBp"
response_uri <- paste0(base_uri,user_id, "/playlists/",playlist_id,"/tracks")
response_uri
response <- GET(
response_uri,
add_headers("Authorization" = paste0("Bearer ", token))
)
response
View(response)
body <- content(response, "text")
parsed_data <- fromJSON(body)
View(parsed_data)
flat_data <- flatten(parsed_data)
View(parsed_data)
flat_data <- flatten(parsed_data$items)
View(flat_data)
library("dplyr")
flat_data <- arrange(flat_data, desc(track.popularity))
top_10_tracks <- slice(flat_data, 1:10)
View(top_10_tracks)
top_10_artists <- select(top_10_tracks$track.album.artists)
top_10_artists <- select(top_10_tracks$track.album.artists)
View(top_10_artists)
View(top_10_artists)
View(top_10_tracks)
top_10_artists <- flatten(top_10_tracks$track.album.artists)
top_10_artists <- flatten(as.data.frame(top_10_tracks$track.artists))
top_10_tracks$track.album.artists
artist_list <- top_10_tracks$track.album.artists
View(artist_list)
number_one <- flatten(artist_list)
artist_list <- as.data.frame(top_10_tracks$track.album.artists)
artist_list <- top_10_tracks$track.album.artists
artist_list$[[1]]
artist_list$1
artist_list
artist_list[1]
artist_list[1]
as.data.frame(artist_list[1])
number_one <- as.data.frame(artist_list[1])
View(number_one)
number_one <- as.data.frame(artist_list[1])
number_one <- as.data.frame(artist_list[1])
number_one <- as.data.frame(artist_list[1])
number_one <- as.data.frame(artist_list[1])
number_one <- as.data.frame(artist_list[1])
artist_list <- top_10_tracks$track.album.artists
number_one <- as.data.frame(artist_list[1])
number_two <- as.data.frame(artist_list[2])
number_three <- as.data.frame(artist_list[3])
number_four <- as.data.frame(artist_list[4])
number_five <- as.data.frame(artist_list[5])
number_six <- as.data.frame(artist_list[6])
number_seven <- as.data.frame(artist_list[7])
number_eight<- as.data.frame(artist_list[8])
number_nine <- as.data.frame(artist_list[9])
number_ten <- as.data.frame(artist_list[10])
View(number_eight)
View(number_eight)
top_ten_artists <- data.frame()
View(top_10_artists)
View(top_10_artists)
top_ten_artists <- data.frame()
View(top_ten_artists)
top_ten_artists <- mutate(top_ten_artists, Rank = c(1:10))
top_ten_artists <- data.frame(ncol = 2, nrow = 10)
View(top_ten_artists)
top_ten_artists <- mutate(top_ten_artists, Rank = c(1:10))
top_ten_artists <- ncol(top_ten_artists) = 2
top_ten_artists <- ncol(top_ten_artists) =
.
2
top_ten_artists <- data.frame(matrix(, nrow=10, ncol=2))
top_ten_artists <- mutate(top_ten_artists, Rank = c(1:10))
top_ten_artists <- data.frame(matrix(, nrow=10, ncol=0))
top_ten_artists <- mutate(top_ten_artists, Rank = c(1:10))
artist_names<- c(number_one$name,
number_two$name,
number_three$name,
number_four$name,
number_five$name,
number_six$name,
number_seven$name,
number_eight$name,
number_nine$name,
number_ten$name)
artist_names
View(number_eight)
top_ten_artists <- mutate(top_ten_artists, Names = artist_names)
artist_one <- number_one$name
number_two
number_twotop_ten_artists <- data.frame(matrix(, nrow=10, ncol=0))
number_two
number_two
artist_one <- number_one$name
artist_two <- number_two$name
artist_three <- number_three$name
artist_four <- number_four$name
artist_five <- number_five$name
artist_six <- number_six$name
artist_seven <- number_seven$name
artist_eight <- number_eight$name
artist_nine <- number_nine$name
artist_ten <- number_ten$name
ordered_artists <- c(artist_one,
artist_two,
artist_three,
artist_four,
artist_five,
artist_six,
artist_seven,
artist_eight,
artist_nine,
artist_ten )
artist_eight <- paste(number_eight$name)
artist_eight
ordered_artists <- c(artist_one,
artist_two,
artist_three,
artist_four,
artist_five,
artist_six,
artist_seven,
artist_eight,
artist_nine,
artist_ten )
artist_eight <- paste0(number_eight$name)
artist_eight
View(number_eight)
View(number_eight)
artist_eight <- paste(number_eight$name, collapse = '')
artist_eight <- paste(number_eight$name, collapse = ',')
artist_eight <- paste(number_eight$name, collapse = ', ')
artist_one <- paste(number_one$name, collapse = ', ')
artist_two <- paste(number_two$name, collapse = ', ')
artist_three <- paste(number_three$name, collapse = ', ')e
artist_four <- paste(number_fourt$name, collapse = ', ')
artist_five <- paste(number_five$name, collapse = ', ')
artist_six <- paste(number_six$name, collapse = ', ')
artist_seven <- paste(number_seven$name, collapse = ', ')
artist_eight <- paste(number_eight$name, collapse = ', ')
artist_nine <- paste(number_nine$name, collapse = ', ')
artist_ten <- paste(number_ten$name, collapse = ', ')
artist_one <- paste(number_one$name, collapse = ', ')
artist_two <- paste(number_two$name, collapse = ', ')
artist_three <- paste(number_three$name, collapse = ', ')
artist_four <- paste(number_four$name, collapse = ', ')
artist_five <- paste(number_five$name, collapse = ', ')
artist_six <- paste(number_six$name, collapse = ', ')
artist_seven <- paste(number_seven$name, collapse = ', ')
artist_eight <- paste(number_eight$name, collapse = ', ')
artist_nine <- paste(number_nine$name, collapse = ', ')
artist_ten <- paste(number_ten$name, collapse = ', ')
ordered_artists <- c(artist_one,
artist_two,
artist_three,
artist_four,
artist_five,
artist_six,
artist_seven,
artist_eight,
artist_nine,
artist_ten )
ordered_artists
top_ten_artists <- data.frame(matrix(, nrow=10, ncol=0))
top_ten_artists <- mutate(top_ten_artists, Rank = c(1:10))
top_ten_artists <- mutate(top_ten_artists, Names = ordered_artists)
top_ten_artists
View(top_ten_artists)
View(top_ten_artists)
View(top_10_artists)
library("httr")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
library("dplyr")
# This file is for authorizing the spotify API making requests to the API and
# making calls to the API
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
# create token/key for all requests for the API
token <- auth_body$access_token
base_uri <- "https://api.spotify.com/v1/users/"
user_id <- "wavypaper"
playlist_id <- "37i9dQZEVXbLRQDuF5jeBp"
response_uri <- paste0(base_uri,user_id, "/playlists/",playlist_id,"/tracks")
response <- GET(
response_uri,
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(response, "text")
parsed_data <- fromJSON(body)
flat_data <- flatten(parsed_data$items)
flat_data <- arrange(flat_data, desc(track.popularity))
top_10_tracks <- slice(flat_data, 1:10)
artist_list <- top_10_tracks$track.album.artists
number_one <- as.data.frame(artist_list[1])
number_two <- as.data.frame(artist_list[2])
number_three <- as.data.frame(artist_list[3])
number_four <- as.data.frame(artist_list[4])
number_five <- as.data.frame(artist_list[5])
number_six <- as.data.frame(artist_list[6])
number_seven <- as.data.frame(artist_list[7])
number_eight<- as.data.frame(artist_list[8])
number_nine <- as.data.frame(artist_list[9])
number_ten <- as.data.frame(artist_list[10])
artist_one <- paste(number_one$name, collapse = ', ')
artist_two <- paste(number_two$name, collapse = ', ')
artist_three <- paste(number_three$name, collapse = ', ')
artist_four <- paste(number_four$name, collapse = ', ')
artist_five <- paste(number_five$name, collapse = ', ')
artist_six <- paste(number_six$name, collapse = ', ')
artist_seven <- paste(number_seven$name, collapse = ', ')
artist_eight <- paste(number_eight$name, collapse = ', ')
artist_nine <- paste(number_nine$name, collapse = ', ')
artist_ten <- paste(number_ten$name, collapse = ', ')
ordered_artists <- c(artist_one,
artist_two,
artist_three,
artist_four,
artist_five,
artist_six,
artist_seven,
artist_eight,
artist_nine,
artist_ten )
top_ten_artists <- data.frame(matrix(, nrow=10, ncol=0))
top_ten_artists <- mutate(top_ten_artists, Rank = c(1:10))
top_ten_artists <- mutate(top_ten_artists, Names = ordered_artists)
View(top_ten_artists)
View(artist_list)
View(flat_data)
View(flat_data)
library("httr")
library("RCurl") # new package we haven't used before make sure to install
library("jsonlite")
library("dplyr")
# This file is for authorizing the spotify API making requests to the API and
# making calls to the API
# store client_id and client_secret in keys.R file hidden by gitignore
source("keys.R")
# format project id for authorization with the API
id_secret <- base64(paste(client_id, client_secret, sep = ":"))
# authorize project with API
auth <- POST("https://accounts.spotify.com/api/token",
add_headers("Authorization" = paste0("Basic ", id_secret)),
body = list(grant_type = "client_credentials"),
encode = "form")
auth_body <- content(auth)
# create token/key for all requests for the API
token <- auth_body$access_token
base_uri <- "https://api.spotify.com/v1/users/"
user_id <- "wavypaper"
playlist_id <- "37i9dQZEVXbLRQDuF5jeBp"
response_uri <- paste0(base_uri,user_id, "/playlists/",playlist_id,"/tracks")
response <- GET(
response_uri,
add_headers("Authorization" = paste0("Bearer ", token))
)
body <- content(response, "text")
parsed_data <- fromJSON(body)
flat_data <- flatten(parsed_data$items)
flat_data <- arrange(flat_data, desc(track.popularity))
top_10_tracks <- slice(flat_data, 1:10)
artist_list <- top_10_tracks$track.album.artists
number_one <- as.data.frame(artist_list[1])
number_two <- as.data.frame(artist_list[2])
number_three <- as.data.frame(artist_list[3])
number_four <- as.data.frame(artist_list[4])
number_five <- as.data.frame(artist_list[5])
number_six <- as.data.frame(artist_list[6])
number_seven <- as.data.frame(artist_list[7])
number_eight<- as.data.frame(artist_list[8])
number_nine <- as.data.frame(artist_list[9])
number_ten <- as.data.frame(artist_list[10])
artist_one <- paste(number_one$name, collapse = ', ')
artist_two <- paste(number_two$name, collapse = ', ')
artist_three <- paste(number_three$name, collapse = ', ')
artist_four <- paste(number_four$name, collapse = ', ')
artist_five <- paste(number_five$name, collapse = ', ')
artist_six <- paste(number_six$name, collapse = ', ')
artist_seven <- paste(number_seven$name, collapse = ', ')
artist_eight <- paste(number_eight$name, collapse = ', ')
artist_nine <- paste(number_nine$name, collapse = ', ')
artist_ten <- paste(number_ten$name, collapse = ', ')
ordered_artists <- c(artist_one,
artist_two,
artist_three,
artist_four,
artist_five,
artist_six,
artist_seven,
artist_eight,
artist_nine,
artist_ten )
top_ten_artists <- data.frame(matrix(, nrow=10, ncol=0))
top_ten_artists <- mutate(top_ten_artists, Rank = c(1:10))
top_ten_artists <- mutate(top_ten_artists, Names = ordered_artists)
View(top_ten_artists)
top_ten_artists <- data.frame(matrix(, nrow=10, ncol=0))
top_ten_artists <- mutate(top_ten_artists, Rank = c(1:10))
top_ten_artists <- mutate(top_ten_artists, Artists = ordered_artists)
View(top_ten_artists)
